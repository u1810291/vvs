image: docker:latest

services:
  - docker:dind

.setup_ssh: &setup_ssh |
  eval $(ssh-agent -s)
  echo "$SSH_PRIVATE_KEY" | ssh-add -
  mkdir -p ~/.ssh
  ssh-keyscan -H $HOST >> ~/.ssh/known_hosts

stages:
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CI_SERVER_HOST: $CI_SERVER_HOST
  CI_JOB_TOKEN: $CI_JOB_TOKEN

build:
  interruptible: true
  stage: build
  only:
    refs:
      - main
      - staging
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG

deploy_staging:
  interruptible: true
  stage: deploy
  variables:
    DOCKER_HOST: ssh://root@$HOST
    VIRTUAL_HOST: ecvvs.swarm.testavimui.eu
    CONTAINER_NAME: ec-vvs
  only:
    refs:
      - main
      - staging
  environment:
    name: staging
    url: $VIRTUAL_HOST
  script:
    - *setup_ssh
    - export DOCKER_HOST=ssh://root@$HOST
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $IMAGE_TAG
    - docker rm --force --volumes $CONTAINER_NAME || echo 'No running prior images'
    - >
        docker run -d
        -e VIRTUAL_HOST=$VIRTUAL_HOST
        -e HOST=$VIRTUAL_HOST
        --name $CONTAINER_NAME
        --network nginx-proxy
        --restart unless-stopped
        $IMAGE_TAG
